import { selectClasses } from '@mui/material';
import axios from 'axios';
import Head from 'next/head';
import Image from 'next/image';
import { useRouter } from 'next/router';
import React, { useEffect, useRef, useState } from 'react';
import { io } from 'socket.io-client';
import ChatInput from '../Components/ChatInput';
import LeftNav from '../Components/LeftNav';
import MessageBox from '../Components/MessageBox';
import TopNav from '../Components/TopNav';
import Wellcome from '../Components/Wellcome';



const Home = () => {
  const socket = useRef()
    const router = useRouter()
    const [selectedUser,setSelectedUser]= useState<any>(undefined)
    const [currentUser,setCurrentUser]= useState<any>(undefined)
    const [messages, setMessages] = useState<any>([]);
    const [receivedMsg,setReceivedMsg]= useState("")
    // handle authentication
    useEffect(() => {
        const token = localStorage.getItem('user');
        if (!token) {
            router.push('/login')
        }
    
    })
// message information

   
    // ?check other thinfs 
   



const handleSend :React.FormEventHandler<HTMLFormElement> = async(message)=>{

const data : any = message

  // get api key
const user : any = await JSON.parse( localStorage.getItem('user')|| '{}')
// process message for send server and send it
setCurrentUser(user)





}

// load chat data from server site



    

   
    return (
        <>
            <Head >
                <title>ChatsSkoot - Realtime Chat application</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            {/* main section */}
            <div className="main max-h-screen w-full bg-bgPrimary bg-fixed">
               <LeftNav
                 setSelectedUser={setSelectedUser}
               
               />
{
    !selectedUser ? <Wellcome/>
    :
    <main className="main-content relative  max-h-screen w-full md:pl-[280px] lg:pl-[280px]">
    <div className="z-50 relative">
      <div className='chatContainer h-screen grid '>
  
        <div className="nav text-white">
  
          {/* topNav sectiopn  */}
  
          <TopNav
            
            selectedUser={selectedUser}
          />
  
        </div>
        <div className="chats text-white flex flex-col-reverse px-5 overflow-y-scroll">
  
          <MessageBox
        messages={messages}
        receivedMsg={receivedMsg}
     
            
          />
  
  
  
        </div>
  
        {/* message options */}
  
        <div className="msgBox grid  content-center items-center gap-6  text-white">
  
  
  
          <Image width={70} height={70} src='/images/attachment.png' alt='attachment' />
  
  
  
<ChatInput
handleSend = {handleSend}
   
/>
  
        </div>
  
  
  
  
      </div>
    </div>
    <div>
  
    </div>
  </main>
}
            </div>


        </>
    );
};

export default Home;